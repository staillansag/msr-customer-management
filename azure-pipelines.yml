# My News Service build pipeline

trigger: 
  - main
  - feature*

pool:
  name: Default

stages:

- stage: Build

  jobs:

  - job: BuildImage

    steps:
    - task: DownloadSecureFile@1
      name: kubectlConfig
      displayName: 'Download kubectl config'
      inputs:
        secureFile: 'config-aks.yml'

    - task: DownloadSecureFile@1
      displayName: 'Download test environment file'
      name: dockerEnv
      inputs:
        secureFile: 'qa.env'  

    - task: DownloadSecureFile@1
      name: ACRSPCredentials
      displayName: 'Download ACR SP credentials'
      inputs:
        secureFile: 'acr.sp.credentials.sh'

    - script: chmod u+x ./buildScripts/*.sh
      displayName: "Grant shell execution permissions"

    - script: ./buildScripts/01.setJobInitialVariables.sh
      displayName: 'Set job variables'

    - script: ./buildScripts/02.prepareAgentMachineV2.sh
      displayName: 'Prepare agent'

    - script: ./buildScripts/04.build.sh
      displayName: 'Build and push image'

- stage: Deploy
  dependsOn: Build

  jobs:

  - job: DeployKubernetes

    steps:  

    - task: DownloadSecureFile@1
      name: kubernetesSecrets
      displayName: 'Download kubernetes secrets'
      inputs:
        secureFile: 'kubernetes-secrets.yaml'

    - script: chmod u+x ./buildScripts/*.sh
      displayName: "Grant shell execution permissions"

    - script: ./buildScripts/06.deployKubernetes.sh
      displayName: 'Deploy image to Kubernetes'

  - job: AutomatedTestsProd
    dependsOn: DeployKubernetes

    steps:

    - task: DownloadSecureFile@1
      name: postmanEnvironmentProd
      displayName: 'Download Postman Prod environment file'
      inputs:
        secureFile: 'CustomerManagement-prod.postman_environment.json'

    - script: chmod u+x ./buildScripts/*.sh
      displayName: "Grant shell execution permissions"
      
    - script: ./buildScripts/88.automatedTests.sh
      displayName: 'Perform automated tests'

  - job: RollbackKubernetesDeployment
    dependsOn: 
    - DeployKubernetes
    - AutomatedTestsProd
    condition: |
      or
      (
        eq(dependencies.DeployKubernetes.result, 'Failed'),
        eq(dependencies.AutomatedTestsProd.result, 'Failed')
      )

    steps:

    - script: chmod u+x ./buildScripts/*.sh
      displayName: "Grant shell execution permissions"

    - script: ./buildScripts/90.rollbackKubernetesDeployment.sh
      displayName: 'Rollback Kubernetes deployment'