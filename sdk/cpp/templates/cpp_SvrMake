#                   Generated Cpp-Service Makefile
#
#  %value svcName%.mak:  DO NOT USE THIS FILE DIRECTLY.
#		This file has been generated for %value svcName%; please 
#		create and/or augment %value ifcNodeName%.mak with the contents
#  		of this file. 
#
#  %value svcName%.cpp:  DO NOT EXTEND THIS FILE.
#		Copy this file to %value svcName%Impl.c and customize in
#		order to prevent overwriting by subsequent code gens.
#
#  %value ifcNodeName%.mak:  CONSTRUCT AND MAKE THIS FILE.
#		Use this file to make the shared library for your interface
#		which will be loaded by the Integration Server.
#
#  Environment Settings:  make sure you set JDKDIR and SERVDIR for 
#               your deployment.                         
#


%ifvar platform equals(win)%
#  Set these:
JDKDIR = C:\Progra~1\Java\jdk1.5.0_12
SERVDIR = %value svrHomeDir +nl%
CPPLIB = %value svrHomeDir%\lib
CPPINC = %value svrHomeDir%\sdk\cpp\include

#  Copy SRC value to %value ifcNodeName%.mak:
SRC = %value svcName%Impl.cpp

PKGDIR = $(SERVDIR)\packages\%value pkgName +nl%
LIBSDIR = $(PKGDIR)\code\libs

all: install

install:  %value ifcNodeName%.dll
	if exist $(LIBSDIR)\%value ifcName%.dlx \
		del $(LIBSDIR)\%value ifcName%.dlx
	if exist $(LIBSDIR)\%value ifcName%.dll \
		rename $(LIBSDIR)\%value ifcName%.dll %value ifcName%.dlx
	copy %value ifcNodeName%.dll $(LIBSDIR)\%value ifcName%.dll

%value ifcNodeName%.dll: $(SRC)
	cl -DWIN32 /ML /GX -I$(JDKDIR)\include -I$(CPPINC) \
		-I$(JDKDIR)\include\win32 \
		-I$(SERVDIR)\lib -I$(LIBSDIR) -LD $(SRC) \
		$(CPPLIB)\WinWMJni.lib $(JDKDIR)\lib\jvm.lib -Fe%value ifcNodeName%.dll

clean:
	del *.obj
	del *.exp
	del *.lib
	del %value ifcNodeName%.dll

%else%
#  Set these:
JDKDIR = /usr/java
SERVDIR = %value svrHomeDir +nl%
CPPLIB = %value svrHomeDir%/lib
CPPINC = %value svrHomeDir%/sdk/cpp/include

#  Copy OBJ value to %value ifcNodeName%.mak:
OBJ = %value svcName%Impl.o

PKGDIR = $(SERVDIR)/packages/%value pkgName%%nl%
LIBSDIR = $(PKGDIR)/code/libs

.SUFFIXES:
.SUFFIXES: .cpp .o

%switch platform%
%case lnx%
COPT = -g -fPIC
SO = so

all: install

.cpp.o:  
	g++ $(COPT) -I$(JDKDIR)/include -I$(CPPINC) -I$(JDKDIR)/include/linux \
		-I$(SERVDIR)/lib -I$(LIBSDIR) -c $< -o $@

%value ifcNodeName%.$(SO): $(OBJ)
	g++ -shared $(OBJ) $(CPPLIB)/libwmjni.$(SO) \
		-o %value ifcNodeName%.$(SO)

%case sol%
COPT = -g -fpic
SO = so

all: install

.cpp.o:  
	g++ $(COPT) -I$(JDKDIR)/include -I$(CPPINC) -I$(JDKDIR)/include/solaris \
		-I$(SERVDIR)/lib -I$(LIBSDIR) -c $< -o $@


%value ifcNodeName%.$(SO): $(OBJ)
	g++ -shared $(OBJ) $(CPPLIB)/libwmjni.$(SO) \
		-o %value ifcNodeName%.$(SO)

%case hpx%
COPT = -Dunix -Dhpux -AA +Z -mt -DNATIVE -D_POSIX_C_SOURCE=199506L
LOPT = -b +s
SO = sl

all: install

.cpp.o:  
	aCC $(COPT) -I$(JDKDIR)/include -I$(CPPINC) -I$(JDKDIR)/include/hp-ux \
		-I$(SERVDIR)/lib -I$(LIBSDIR) -c $< -o $@

%value ifcNodeName%.$(SO): $(OBJ)
	ld $(LOPT) $(OBJ) $(CPPLIB)/libwmjni.$(SO) \
		-o %value ifcNodeName%.$(SO)

%case aix%
COPT = -g
SHARED_LD_LINK = makeC++SharedLib_r
SO = so

all: install

.cpp.o:
	xlC_r $(COPT) -I$(CPPINC) -I$(JDKDIR)/include -I$(JDKDIR)/include/aix \
		-I$(SERVDIR)/lib -I$(LIBSDIR) -c $< -o $@

%value ifcNodeName%.$(SO): $(OBJ)
	$(SHARED_LD_LINK) $(OBJ) -p2000 -L$(CPPLIB) -lwmjni -L$(JDKDIR)/jre/lib/ppc/classic -ljvm \
		-o %value ifcNodeName%.$(SO)

%end%

install:  %value ifcNodeName%.$(SO)
	chmod a+x %value ifcNodeName%.$(SO)
	cp %value ifcNodeName%.$(SO) $(LIBSDIR)/lib%value ifcName%.$(SO)

clean:
	rm -f core *.o %value ifcNodeName%.$(SO)

%endif%

